# HestX Platform - Backend & Frontend Code

# Backend (FastAPI)
from fastapi import FastAPI, Depends
from pydantic import BaseModel
import databases, sqlalchemy

DATABASE_URL = "postgresql://hestx_user:hestx_secure_pass@localhost/hestx_db"
database = databases.Database(DATABASE_URL)
metadata = sqlalchemy.MetaData()

engine = sqlalchemy.create_engine(DATABASE_URL)
metadata.create_all(engine)

app = FastAPI()

class User(BaseModel):
    email: str
    password: str

table_users = sqlalchemy.Table(
    "users",
    metadata,
    sqlalchemy.Column("id", sqlalchemy.Integer, primary_key=True),
    sqlalchemy.Column("email", sqlalchemy.String, unique=True),
    sqlalchemy.Column("password", sqlalchemy.String)
)

@app.on_event("startup")
async def startup():
    await database.connect()

@app.on_event("shutdown")
async def shutdown():
    await database.disconnect()

@app.post("/register")
async def register(user: User):
    query = table_users.insert().values(email=user.email, password=user.password)
    await database.execute(query)
    return {"message": "User registered successfully"}

# Frontend (React)
import React from "react";
import { useState } from "react";

export default function Register() {
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    
    const handleRegister = async () => {
        const response = await fetch("http://localhost:8000/register", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email, password })
        });
        const data = await response.json();
        alert(data.message);
    };
    
    return (
        <div>
            <h2>Register</h2>
            <input type="email" placeholder="Email" onChange={(e) => setEmail(e.target.value)} />
            <input type="password" placeholder="Password" onChange={(e) => setPassword(e.target.value)} />
            <button onClick={handleRegister}>Sign Up</button>
        </div>
    );
}
